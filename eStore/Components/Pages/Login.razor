@page "/login"
@using System.ComponentModel.DataAnnotations
@using DataAccess.DTO
@using BusinessObject.Entities
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.Extensions.Options
@using eStore.Authentication
@using eStore.Services.Interfaces
@using Microsoft.AspNetCore.Http
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation
@inject IMemberService MemberService

<PageTitle>Login</PageTitle>

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h3 class="text-center">Login</h3>
            </div>
            <div class="card-body">
                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <p class="text-danger">@ErrorMessage</p>
                }

                <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-group mb-3">
                        <label for="email">Email</label>
                        <InputText id="email" @bind-Value="loginModel.Email" class="form-control" />
                        <ValidationMessage For="@(() => loginModel.Email)" />
                    </div>

                    <div class="form-group mb-3">
                        <label for="password">Password</label>
                        <InputText id="password" type="password" @bind-Value="loginModel.Password" class="form-control" />
                        <ValidationMessage For="@(() => loginModel.Password)" />
                    </div>
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary">Login</button>
                    </div>
                </EditForm>
                <div class="mt-3 text-center">
                    <p>Don't have an account? <a href="/register">Register here</a></p>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    private LoginDTO loginModel = new LoginDTO();

    private string ErrorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity!.IsAuthenticated)
        {
            if (authState.User.IsInRole("Admin"))
            {
                Navigation.NavigateTo("/admin/dashboard");
            }
            else
            {
                Navigation.NavigateTo("/");
            }
        }
    }

    private async Task HandleLogin()
    {
        Console.WriteLine($"Entered Email: {loginModel.Email}");
        Console.WriteLine($"Entered Password: {loginModel.Password}");
        var member = await MemberService.LoginAsync(loginModel.Email, loginModel.Password);
        if (member != null)
        {
            bool isAdmin = await MemberService.IsAdmin(member);
            if (isAdmin)
            {
                var userSession = new UserSession
                    {
                        Email = member.Email,
                        Role = "Admin"
                    };
                var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
                await customAuthStateProvider.UpdateAuthenticationState(userSession);
                Navigation.NavigateTo("/admin/dashboard");
            }
            else
            {
                var userSession = new UserSession
                    {
                        Email = member.Email,
                        Role = "Member"
                    };
                var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
                await customAuthStateProvider.UpdateAuthenticationState(userSession);
                Navigation.NavigateTo("/weather"); //change to member page later
            }
        }
        else
        {
            ErrorMessage = "Invalid email or password";
        }
    }
}
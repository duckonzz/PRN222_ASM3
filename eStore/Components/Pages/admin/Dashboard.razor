@page "/admin/dashboard"
@attribute [Authorize(Roles = "Admin")]
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using DataAccess.DTO
@using eStore.Authentication
@* @using eStore.Service.Interface *@
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@* @inject IOrderService OrderService *@
@inject IJSRuntime JSRuntime

<PageTitle>Admin Dashboard</PageTitle>
<style>
    .admin-container {
        padding: 25px;
        background-color: #f8f9fa;
        min-height: 100vh;
    }

    /* Typography */
    h1, h2, h3, h4, h5, h6 {
        color: #2c3e50;
        font-weight: 600;
    }

    h1 {
        margin-bottom: 20px;
        border-bottom: 2px solid #3498db;
        padding-bottom: 10px;
    }

    /* Welcome alert styling */
    .alert-success {
        background-color: #d4edda;
        border-color: #c3e6cb;
        color: #155724;
        border-radius: 8px;
        padding: 15px 20px;
        margin-bottom: 25px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    /* Card styling */
    .card {
        border: none;
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        margin-bottom: 20px;
        overflow: hidden;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
        }

    .card-header {
        background-color: #fff;
        border-bottom: 1px solid #eaeaea;
        padding: 15px 20px;
        font-weight: 600;
        color: #3498db;
        font-size: 1.1rem;
    }

    .card-body {
        padding: 20px;
        background-color: #fff;
    }

    /* Dashboard cards grid */
    .row {
        margin-right: -10px;
        margin-left: -10px;
    }

    .col-md-3 {
        padding-right: 10px;
        padding-left: 10px;
    }

    /* Dashboard menu cards */
    .dashboard-card {
        text-align: center;
        height: 100%;
    }

        .dashboard-card .card-header {
            background-color: #3498db;
            color: white;
            font-weight: 600;
            text-align: center;
        }

        .dashboard-card .card-body {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            height: 140px;
        }

        .dashboard-card p {
            margin-bottom: 15px;
            color: #555;
        }

    /* Button styling */
    .btn {
        border-radius: 6px;
        font-weight: 500;
        padding: 8px 16px;
        transition: all 0.2s ease;
    }

    .btn-primary {
        background-color: #3498db;
        border-color: #3498db;
        color: white;
    }

        .btn-primary:hover {
            background-color: #2980b9;
            border-color: #2980b9;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(52, 152, 219, 0.3);
        }

    .btn-secondary {
        background-color: #95a5a6;
        border-color: #95a5a6;
    }

        .btn-secondary:hover {
            background-color: #7f8c8d;
            border-color: #7f8c8d;
        }

    .btn-danger {
        background-color: #e74c3c;
        border-color: #e74c3c;
    }

        .btn-danger:hover {
            background-color: #c0392b;
            border-color: #c0392b;
        }

    .btn-info {
        background-color: #2ecc71;
        border-color: #2ecc71;
        color: white;
    }

        .btn-info:hover {
            background-color: #27ae60;
            border-color: #27ae60;
        }

    .btn-sm {
        padding: 5px 10px;
        font-size: 0.875rem;
    }

    /* Form styling */
    .form-control {
        border-radius: 6px;
        padding: 10px 12px;
        border: 1px solid #ddd;
        transition: border-color 0.2s;
    }

        .form-control:focus {
            border-color: #3498db;
            box-shadow: 0 0 0 0.2rem rgba(52, 152, 219, 0.25);
        }

    label {
        font-weight: 500;
        color: #444;
        margin-bottom: 6px;
    }

    .validation-message {
        color: #e74c3c;
        font-size: 0.85rem;
        margin-top: 5px;
    }

    /* Table styling */
    .table {
        border-collapse: separate;
        border-spacing: 0;
        width: 100%;
        margin-bottom: 1rem;
        border-radius: 8px;
        overflow: hidden;
    }

    .table-responsive {
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        overflow: hidden;
    }

    .table th {
        background-color: #f8f9fa;
        color: #2c3e50;
        font-weight: 600;
        padding: 12px 15px;
        border-bottom: 2px solid #ddd;
    }

    .table td {
        padding: 12px 15px;
        vertical-align: middle;
        border-top: 1px solid #eee;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(0, 0, 0, 0.02);
    }

    .table-hover tbody tr:hover {
        background-color: rgba(52, 152, 219, 0.05);
    }

    /* Pagination styling */
    .pagination-section {
        padding: 15px 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 15px;
    }

    .page-info {
        color: #7f8c8d;
        font-weight: 500;
    }

    /* Stats cards on dashboard */
    .bg-primary, .bg-success, .bg-info {
        border-radius: 8px;
        transition: all 0.3s ease;
    }

        .bg-primary:hover, .bg-success:hover, .bg-info:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
        }

    .bg-primary {
        background-color: #3498db !important;
    }

    .bg-success {
        background-color: #2ecc71 !important;
    }

    .bg-info {
        background-color: #1abc9c !important;
    }

    .text-white h5 {
        color: white;
        font-size: 1rem;
        margin-bottom: 10px;
        opacity: 0.9;
    }

    .text-white h2 {
        color: white;
        font-size: 2rem;
        margin-bottom: 0;
    }

    /* Member management form */
    .form-group {
        margin-bottom: 15px;
    }

    /* Loading spinner */
    .spinner-border {
        color: #3498db;
    }

    /* Not authorized section */
    .not-authorized {
        text-align: center;
        padding: 40px 20px;
        background-color: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        max-width: 500px;
        margin: 50px auto;
    }

        .not-authorized p {
            color: #e74c3c;
            font-size: 1.1rem;
            margin-bottom: 20px;
        }
</style>
<AuthorizeView Roles="Admin" Context="auth">
    <Authorized>
        @* <div class="alert alert-success"> *@
        @*     Welcome, @auth.User.Identity?.Name! *@
        @* </div> *@

        <div class="row">
            <div class="col-md-3">
                <div class="card mb-3">
                    <div class="card-header">
                        Categories Management
                    </div>
                    <div class="card-body">
                        <p>Manage your store categories</p>
                        <a href="/categories" class="btn btn-primary">Manage Categories</a>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="card mb-3">
                    <div class="card-header">
                        Products Management
                    </div>
                    <div class="card-body">
                        <p>Manage your store products</p>
                        <a href="/products" class="btn btn-primary">Manage Products</a>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="card mb-3">
                    <div class="card-header">
                        Orders Management
                    </div>
                    <div class="card-body">
                        <p>View and manage customer orders</p>
                        <a href="/admin/orders" class="btn btn-primary">Manage Orders</a>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="card mb-3">
                    <div class="card-header">
                        Members Management
                    </div>
                    <div class="card-body">
                        <p>Manage store members</p>
                        <a href="/admin/members" class="btn btn-primary">Manage Members</a>
                    </div>
                </div>
            </div>
        </div>

        @* <div class="card mb-4">
        <div class="card-header">
        <h5>Sales Report</h5>
        </div>
        <div class="card-body">
        <EditForm Model="this">
        <div class="row mb-3">
        <div class="col-md-4">
        <div class="form-group">
        <label for="startDate">Start Date</label>
        <InputDate id="startDate" class="form-control" @bind-Value="startDate" />
        </div>
        </div>
        <div class="col-md-4">
        <div class="form-group">
        <label for="endDate">End Date</label>
        <InputDate id="endDate" class="form-control" @bind-Value="endDate" />
        </div>
        </div>
        <div class="col-md-4 d-flex align-items-end">
        <button type="button" class="btn btn-primary" @onclick="GenerateReport">Generate Report</button>
        </div>
        </div>
        </EditForm>

        @if (isLoading)
        {
        <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
        </div>
        </div>
        }
        else if (reportGenerated)
        {
        <div class="row mb-4">
        <div class="col-md-4">
        <div class="card bg-primary text-white">
        <div class="card-body">
        <h5 class="card-title">Total Sales</h5>
        <h2 class="card-text">@totalSales.ToString("C")</h2>
        </div>
        </div>
        </div>
        <div class="col-md-4">
        <div class="card bg-success text-white">
        <div class="card-body">
        <h5 class="card-title">Total Orders</h5>
        <h2 class="card-text">@totalOrders</h2>
        </div>
        </div>
        </div>
        <div class="col-md-4">
        <div class="card bg-info text-white">
        <div class="card-body">
        <h5 class="card-title">Average Order Value</h5>
        <h2 class="card-text">@(totalOrders > 0 ? (totalSales / totalOrders).ToString("C") : "$0.00")</h2>
        </div>
        </div>
        </div>
        </div>

        <h5>Sales by Order (Descending)</h5>
        <div class="table-responsive">
        <table class="table table-striped table-hover">
        <thead>
        <tr>
        <th>Order ID</th>
        <th>Date</th>
        <th>Customer</th>
        <th>Amount</th>
        <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in salesReport)
        {
        <tr>
        <td>@item.OrderId</td>
        <td>@item.OrderDate.ToString("yyyy-MM-dd")</td>
        <td>@item.MemberCompanyName</td>
        <td>@item.TotalAmount.ToString("C")</td>
        <td>
        <button class="btn btn-sm btn-info" @onclick="() => ViewOrderDetails(item.OrderId)">
        <i class="bi bi-eye"></i> View
        </button>
        </td>
        </tr>
        }
        </tbody>
        </table>
        </div>
        }
        </div>
        </div> *@

        @* <div class="mt-3"> *@
        @*     <button class="btn btn-primary" @onclick="Logout"> *@
        @*         <i class="bi bi-box-arrow-right"></i> Logout *@
        @*     </button> *@
        @* </div> *@
    </Authorized>
    <NotAuthorized>
        <p>You are not authorized to access this page.</p>
        <a href="/login" class="btn btn-primary">Go to Login</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; } = null!;

    private DateTime startDate = DateTime.Now.AddMonths(-1);
    private DateTime endDate = DateTime.Now;
    // private List<SalesReportItemDTO> salesReport = new();
    private decimal totalSales = 0;
    private int totalOrders = 0;
    private bool isLoading = false;
    private bool reportGenerated = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationState;

        if (!authState.User.Identity!.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/login");
        }
        else if (!authState.User.IsInRole("Admin"))
        {
            NavigationManager.NavigateTo("/");
        }
    }

    // private async Task GenerateReport()
    // {
    //     if (endDate < startDate)
    //     {
    //         await JSRuntime.InvokeVoidAsync("alert", "End date cannot be earlier than start date");
    //         return;
    //     }

    //     isLoading = true;
    //     reportGenerated = false;
    //     StateHasChanged();

    //     try
    //     {
    //         salesReport = await OrderService.GetSalesReportAsync(startDate, endDate);
    //         totalSales = await OrderService.GetTotalSalesAsync(startDate, endDate);
    //         totalOrders = await OrderService.GetTotalOrdersAsync(startDate, endDate);

    //         reportGenerated = true;
    //     }
    //     catch (Exception ex)
    //     {
    //         await JSRuntime.InvokeVoidAsync("alert", $"Error generating report: {ex.Message}");
    //     }
    //     finally
    //     {
    //         isLoading = false;
    //         StateHasChanged();
    //     }
    // }

    private void ViewOrderDetails(int orderId)
    {
        NavigationManager.NavigateTo($"/admin/orders?id={orderId}");
    }

    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        NavigationManager.NavigateTo("/");
    }
}
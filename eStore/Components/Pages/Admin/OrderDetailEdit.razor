@page "/admin/orders/{OrderId:int}/details/create"
@page "/admin/orders/{OrderId:int}/details/edit/{ProductId:int}"
@using BusinessObject.Entities
@using Service.Services

@inject IOrderDetailService orderDetailService
@inject NavigationManager Navigation

<h3>@(ProductId.HasValue ? "Edit" : "Create") Order Detail</h3>

<EditForm Model="detail" OnValidSubmit="HandleSubmit" formname="orderDetailForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Product ID</label>
        <InputNumber @bind-Value="detail.ProductId" class="form-control" disabled="@ProductId.HasValue" />
    </div>

    <div class="form-group">
        <label>Unit Price</label>
        <InputNumber @bind-Value="detail.UnitPrice" class="form-control" />
    </div>

    <div class="form-group">
        <label>Quantity</label>
        <InputNumber @bind-Value="detail.Quantity" class="form-control" />
    </div>

    <div class="form-group">
        <label>Discount</label>
        <InputNumber @bind-Value="detail.Discount" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    [Parameter]
    public int OrderId { get; set; }

    [Parameter]
    public int? ProductId { get; set; }

    private OrderDetail detail = new OrderDetail();

    protected override async Task OnInitializedAsync()
    {
        if (ProductId.HasValue)
        {
            detail = await orderDetailService.GetOrderDetailAsync(OrderId, ProductId.Value) ?? new OrderDetail();
        }
        else
        {
            detail.OrderId = OrderId;
        }
    }

    private async Task HandleSubmit()
    {
        if (ProductId.HasValue)
        {
            await orderDetailService.UpdateOrderDetailAsync(detail);
        }
        else
        {
            await orderDetailService.AddOrderDetailAsync(detail);
        }
        Navigation.NavigateTo($"/admin/orders/{OrderId}/details");
    }

    private void Cancel()
    {
        Navigation.NavigateTo($"/admin/orders/{OrderId}/details");
    }
}
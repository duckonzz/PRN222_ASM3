
@page "/orders/{OrderId:int}/details"
@using BusinessObject.Services
@using DataAccess.Entities
@inject IOrderService OrderService
@inject IOrderDetailService OrderDetailService
@inject NavigationManager Navigation



@if (order == null || orderDetails == null)
{
    <p>Loading...</p>
}
else
{
    <h4>Order Information</h4>
    <p>Member: @order.Member?.CompanyName</p>
    <p>Order Date: @order.OrderDate.ToString("yyyy-MM-dd")</p>
    <p>Total Amount: @CalculateTotal().ToString("C")</p>

    <h4>Order Details</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Product ID</th>
                <th>Unit Price</th>
                <th>Quantity</th>
                <th>Discount</th>
                <th>Total</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var detail in orderDetails)
            {
                <tr>
                    <td>@detail.ProductId</td>
                    <td>@detail.UnitPrice.ToString("C")</td>
                    <td>@detail.Quantity</td>
                    <td>@detail.Discount.ToString("P")</td>
                    <td>@((detail.UnitPrice * detail.Quantity * (1 - (decimal)detail.Discount)).ToString("C"))</td>
                    <td>
                        <NavLink class="btn btn-sm btn-outline-primary"
                                 href="@($"/orders/{detail.OrderId}/details/edit/{detail.ProductId}")">
                            <i class="bi bi-pencil"></i> Edit
                        </NavLink>
                        <NavLink class="btn btn-sm btn-outline-danger"
                                 href="@($"/orders/{detail.OrderId}/details/delete/{detail.ProductId}")">
                            <i class="bi bi-trash"></i> Delete
                        </NavLink>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <NavLink class="btn btn-success" href="@($"/orders/{OrderId}/details/create")">
        Add New Detail
    </NavLink>
    <NavLink class="btn btn-secondary" href="/orders">
        Back to Orders
    </NavLink>
}

@code {
    [Parameter]
    public int OrderId { get; set; }

    private Order order;
    private List<OrderDetail> orderDetails;

    protected override async Task OnInitializedAsync()
    {
        order = await OrderService.GetOrderByIdAsync(OrderId);
        orderDetails = await OrderDetailService.GetOrderDetailsByOrderIdAsync(OrderId);
    }

    private decimal CalculateTotal()
    {
        return orderDetails?.Sum(od => od.UnitPrice * od.Quantity) ?? 0;
    }

    private void AddDetail()
    {
        Navigation.NavigateTo($"/orders/{OrderId}/details/create");
    }

    private void EditDetail(int orderId, int productId)
    {
        Navigation.NavigateTo($"/orders/{orderId}/details/edit/{productId}");
    }

    private async Task DeleteDetail(int orderId, int productId)
    {
        await OrderDetailService.DeleteOrderDetailAsync(orderId, productId);
        orderDetails = await OrderDetailService.GetOrderDetailsByOrderIdAsync(OrderId);
        StateHasChanged();
    }

    private void BackToOrders()
    {
        Navigation.NavigateTo("/orders");
    }
}